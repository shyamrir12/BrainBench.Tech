@page "/register"
@using AdminPanelApp.Data.RegisterServices;
@using  AdminPanelModels;
@inject IRegisterSubscriber _registerSubscriber

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="First name" HelperText="Max. 8 characters"
                    @bind-Value="model.username" For="@(() => model.username)" />
                    <MudTextField Label="User Name" Class="mt-3"
                    @bind-Value="model.EmailId" For="@(() => model.EmailId)" />
                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                    @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                    <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                    @bind-Value="model.PD_Reenterpwd" For="@(() => model.PD_Reenterpwd)" InputType="InputType.Password" />
                    <MudSelect T="string" Label="Application Type" AnchorOrigin="Origin.BottomCenter" @bind-Value="model.Iid">
                        @foreach (var item in ListApplicationType)
                        {
                            <MudSelectItem Value="@item.Value">@item.Text</MudSelectItem>

                        }
                    </MudSelect>

                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>

        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>


@code {

    RegisterUser model = new RegisterUser();
    public IEnumerable<ListItems> ListApplicationType = new List<ListItems>();
   
    public Result<List<ListItems>> resultListApplicationType = new Result<List<ListItems>>();
    bool success;
    protected override async Task OnInitializedAsync()
    {
        resultListApplicationType = await _registerSubscriber.GetApplicationType();

        if (resultListApplicationType.Status = true)
        {
            ListApplicationType = resultListApplicationType.Data;
        }
    }

    private async Task OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }
    
}
