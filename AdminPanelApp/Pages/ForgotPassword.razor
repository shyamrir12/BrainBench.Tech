@page "/forgotpassword"

@using AdminPanelApp.Data.AzureHelperServices;
@using AdminPanelApp.Data.MailSMSServices;
@using AdminPanelApp.Data.RegisterServices;
@using AdminPanelModels;


@inject IMailSMSSubscriber _mailsmsSubscriber

@inject IToastService _toastService
@inject NavigationManager _navigationManager


<EditForm Model="@model" OnValidSubmit="OnValidSubmit">

    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudCard>
                <MudCardHeader>

                    <CardHeaderContent>


                        <MudText Typo="Typo.h5" Align="Align.Start"><b>Forgot Password</b></MudText>


                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Home" Color="Color.Success" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Email Id" Class="mt-3" OnlyValidateIfDirty=true
                    @bind-Value="model.EmailId" For="@(() => model.EmailId)" />

                    <MudTextField Label="Captcha" HelperText="Max. 8 characters"
                    @bind-Value="model.captcha" For="@(() => model.captcha)" />

                 

                </MudCardContent>
                <MudCardActions>



                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Password" Color="Color.Primary" Class="ml-auto" Disabled="@(!context.IsModified() || !context.Validate())" FullWidth="true">Recover Password</MudButton>


                </MudCardActions>
                <MudCardActions>


                    <MudItem xs="6">
                        <MudText Typo="Typo.body2" Align="Align.Left">
                            <MudLink Href="/">Back to login</MudLink>

                        </MudText>

                    </MudItem>
                    <MudItem xs="6">

                        <MudText Typo="Typo.body2" Align="Align.Right">
                            <MudLink Href="/register">Create an account</MudLink>
                        </MudText>
                    </MudItem>

                </MudCardActions>
            </MudCard>
        </MudItem>

        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>


@code {

    RecoverPassword model = new RecoverPassword();

    [CascadingParameter]
    public EventCallback<NotifyMainLayout> _notifyMainLayout { get; set; }
    NotifyMainLayout nml = new NotifyMainLayout();
    bool success;
  


   

    protected override void OnInitialized()
    {
       
        // resultListApplicationType = await _registerSubscriber.GetApplicationType();

        // if (resultListApplicationType.Status = true)
        // {
        //     ListApplicationType = resultListApplicationType.Data;
        // }
    }

  


    private async Task OnValidSubmit(EditContext context)
    {
        if (context.Validate())
        {
            nml.SpinnerVisible = true;
            _notifyMainLayout.InvokeAsync(nml);
            _toastService.ShowSuccess("!Registration Successful");
            _navigationManager.NavigateTo("/", true);//Navigate to login
            await Task.Delay(5000);
            nml.SpinnerVisible = false;
            _notifyMainLayout.InvokeAsync(nml);
            success = true;
            StateHasChanged();
            // Model is valid, proceed with submission
            // Your logic here
        }
        else
        {
            _toastService.ShowError("!Please fill the form correctly");
        }

     
    }



}
